from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from services.huggingface_client import generate_image, MODELS
from log import logger


# –®–∞–≥ 1: /image ‚Äî –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
async def image_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(name, callback_data=f"image_model:{name}")]
        for name in MODELS.keys()
    ]
    markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üé® –í—ã–±–µ—Ä–∏ –º–æ–¥–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:",
        reply_markup=markup
    )


# –®–∞–≥ 2: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∏ –∑–∞–ø—Ä–æ—Å –æ–ø–∏—Å–∞–Ω–∏—è
async def image_model_select(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    model_name = query.data.split(":", 1)[1]
    model_url = MODELS.get(model_name)

    if not model_url:
        await query.edit_message_text("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    context.user_data["image_model_url"] = model_url
    context.user_data["awaiting_prompt"] = True

    await query.edit_message_text("‚úèÔ∏è –í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:")


# –®–∞–≥ 3: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async def handle_text_for_image(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get("awaiting_prompt"):
        return

    prompt = update.message.text
    model_url = context.user_data.get("image_model_url")

    if not model_url:
        await update.message.reply_text("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞.")
        return

    await update.message.reply_text("üß† –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")

    try:
        image_bytes = generate_image(prompt, model_url)
        await update.message.reply_photo(photo=image_bytes)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")

    context.user_data["awaiting_prompt"] = False
