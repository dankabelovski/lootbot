from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from services.llm_client import ask_assistant
from services.tool_matcher import find_tools_by_query
from log import logger

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):

    if context.user_data.get("awaiting_prompt"):
        from handlers.image import handle_text_for_image
        return await handle_text_for_image(update, context)
    if update.message:
        user_input = update.message.text
    elif update.callback_query and update.callback_query.data.startswith("assistant_reply:"):
        user_input = update.callback_query.data.split(":", 1)[1]
        await update.callback_query.answer()
    else:
        return

    await update.effective_message.chat.send_action("typing")

    try:
        data = await ask_assistant(user_input)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É: {e}")
        await update.effective_message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.")
        return

    reply = data if isinstance(data, str) else "ü§ñ –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫."
    await update.effective_message.reply_text(reply)

    # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    tools = find_tools_by_query(user_input)

    if tools:
        tool_buttons = [
            [InlineKeyboardButton(name, callback_data=f"tool:{tool_id}:auto")]
            for tool_id, name in tools
        ]
        tool_buttons.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main")])

        await update.effective_message.reply_text(
            "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:",
            reply_markup=InlineKeyboardMarkup(tool_buttons)
        )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text
    chat_id = update.effective_chat.id
    print('–≠—Ç–æ handle_message')
    # –ü—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    prompt = f"–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Telegram-–±–æ—Ç–∞ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: {user_text}. –î–∞–π –ø–æ–ª–µ–∑–Ω—ã–π, –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—Ç."

    response = await ask_assistant(prompt, model="mixtral")  # –∏–ª–∏ mistral:7b-instruct
    await context.bot.send_message(chat_id=chat_id, text=response)