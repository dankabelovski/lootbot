from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from log import logger
from services.tool_matcher import find_tools_by_query
from db.users import upsert_user, get_user_model
from services.llm_client import ask_assistant


async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    chat_id = update.effective_chat.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    upsert_user(user.id, user.username)

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    model_name = get_user_model(user.id)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
    if update.message:
        user_input = update.message.text
    elif update.callback_query and update.callback_query.data.startswith("assistant_reply:"):
        user_input = update.callback_query.data.split(":", 1)[1]
        await update.callback_query.answer()
    else:
        return

    await context.bot.send_chat_action(chat_id=chat_id, action="typing")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    prompt = f"–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Telegram-–±–æ—Ç–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: {user_input}. –û—Ç–≤–µ—Ç—å –ø–æ–ª–µ–∑–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ. –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –ø—Ä–µ–¥–ª–æ–∂–∏ –∏—Ö."

    try:
        response = await ask_assistant(prompt, model=model_name)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {e}")
        await context.bot.send_message(chat_id=chat_id, text="‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.")
        return

    reply_text = response if isinstance(response, str) else response.get("reply", "ü§ñ –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
    await context.bot.send_message(chat_id=chat_id, text=reply_text)

    # –ü–æ–∏—Å–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É
    tools = find_tools_by_query(user_input)

    if tools:
        tool_buttons = [
            [InlineKeyboardButton(name, callback_data=f"tool:{tool_id}:auto")]
            for tool_id, name in tools
        ]
        tool_buttons.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main")])

        await context.bot.send_message(
            chat_id=chat_id,
            text="üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:",
            reply_markup=InlineKeyboardMarkup(tool_buttons)
        )
